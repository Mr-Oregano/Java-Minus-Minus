// This is a single line comment

/* 
 * This
 * is
 * a 
 * multiline
 * comment
 */

/* This is a /* nested */
 * multiline comment */

println("Hello, world!\n");

int x = 9;
int y = ~3;
bool isCool = false;

string s = "this is my string";
println(s);

string s1 = "These strings ";
string s2 = "have been concated";
string s3 = s1 + s2;
println(s3);

// =============== TESTING EQUALITY ===============


string s4 = s1;
println("\ns1 and s4 are equal: " + (s1 == s4));
println("s1 and s4 are NOT equal: " + (s1 != s4));

println("x and y are equal: " + (x == y));
println("x and y are NOT equal: " + (x != y));

// Implicit string conversion for other datatypes.
println("\nisCool bool is: " + isCool);

// ================ ERROR EXAMPLES ===================
// Variables must be assigned before use.
int h;

// println(h); // ERR: variable not initialized

// Variables must be declared before use
// println(undeclared); // ERR: variable not declared

// Variables cannot be redeclared
// int h; // ERR: variable redeclaration

// Correct type must be used
// h = true; // ERR: type mismatch

// If and Loop statements don't require blocks
//
if (x > 9 and x == 10 or x < 8)
	x = 8; // assignment
else
	isCool = true;

// Else statements are optional
//
if (isCool)
	isCool = not not isCool;

x = y++ + 7;

while (x > 0)
{
	x--;
	y++;
}

// This is a forloop example
//
for (y = 0; y < 35; ++y)
	--x;

// forloops can also have assignments as an iterator
//
for (y = 0; y < 35; y = y + 3)
{
	if (y % 2 == 0)
	{
		++x;
		int z;
		z = abs ~ abs 8;
	}
}

for (int i = 0; i < 24; ++i)
	if (i % 5 == 0)
		print(i + "\n");

println(~x); // print statements can evaluate given expressions
println(abs y);
println(abs(x));
println(x + y * 4 ^ 3 ^ 2);

// Our language allows empty blocks and statements

{ }

;;
;

{
	{
		;;
	}
}