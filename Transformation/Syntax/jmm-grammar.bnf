USE_LR_PARSER

(* Grammar for the Java Minus Minus language 
	Authors:
		Klim Fedorchuk
		Dylan Keefer
		Connor Peterson
		Chaz Brock
*)

statementList

<statementList> ::= | <statement> <statementList> .

<statement> ::= <incStmt> ";" 
			  | <block> 
			  | <assignment> ";"
			  | <decl> ";" 
			  | "if" "(" <expr> ")" <block> 
			  | "if" "(" <expr> ")" <block> "else" <block>			
			  | <whileLoop>
			  | <forLoop>
			  | "print" "(" <expr> ")" ";"
			  | ";" .

(* Basic Statements *)
<incStmt> ::= <incOp> IDENTIFIER | IDENTIFIER <incOp> .
<incOp> ::= "++" | "--".

<assignment> ::= IDENTIFIER "=" <expr> .

<decl> ::= "bool" IDENTIFIER | "int" IDENTIFIER .

<block> ::= "{" <statementList> "}" .

(* Basic loops *)
<whileLoop> ::= "while" "(" <expr> ")" <block> .

<forLoop> ::= "for" "(" <forInit> ";" <forCond> ";" <forIter> ")" <block> .
<forInit> ::= <assignment> .
<forCond> ::= <expr> .
<forIter> ::= <assignment> | <incStmt> .

(* Basic Expressions *)

<expr> ::= <expr> "or" <andExpr> | <andExpr> .
<andExpr> ::= <andExpr> "and" <equalExpr> | <equalExpr> .

<equalExpr> ::= <equalExpr> <equalOp> <relExpr> | <relExpr> .
<equalOp> ::= "==" | "!=" .

<relExpr> ::= <relExpr> <relOp> <sumExpr> | <sumExpr> .
<relOp> ::= "<" | ">" .

<sumExpr> ::= <sumExpr> <addOp> <mulExpr> | <mulExpr> .
<addOp> ::= "+" | "-" .

<mulExpr> ::= <mulExpr> <mulOp> <unaryExpr> | <unaryExpr> .
<mulOp> ::= "*" | "/" | "%" .

<unaryExpr> ::= <unaryOp> <unaryExpr> | <expExpr> .
<unaryOp> ::= "abs" | "not" | "~" .

<expExpr> ::= <factor> "^" <expExpr> | <factor> .

<factor> ::= IDENTIFIER 
		   | "true"
		   | "false" 
		   | INT_LITERAL 
		   | "(" <expr> ")" .